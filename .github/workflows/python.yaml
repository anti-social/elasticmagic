# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test and build

on:
  push:
    branches: [ "**" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ master, dev/evo ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, '[skip tests]')
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', 'pypy3.8']
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install tox tox-gh-actions
    - name: Lint with flake8
      if: startsWith(matrix.python-version, '3.')
      run: |
        tox -e flake8
    - name: Run unit tests
      run: |
        tox -- tests -v --cov --cov-append
    - name: Run doc tests
      run: |
        tox -e doctest

  integ-tests:
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, '[skip tests]')
    strategy:
      matrix:
        es-version: ['5.6.16', '6.8.23', '7.16.3']
        python-version: ['3.7', '3.8', '3.9', '3.10', 'pypy3.8']
    services:
      elasticsearch:
        image: elasticsearch:${{ matrix.es-version }}
        ports:
        - 9200:9200
        options: >-
          -e="discovery.type=single-node"
          --health-cmd="curl http://localhost:9200/_cluster/health"
          --health-interval=5s
          --health-timeout=2s
          --health-retries=10
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install tox
    - name: Run integration tests
      run: |
        tox -e integ -- tests_integ/general -v --cov --cov-append
    - name: Run async integration tests
      if: startsWith(matrix.python-version, '3.')
      run: |
        tox -e integ-async -- tests_integ/asyncio -v --cov --cov-append

  deploy:
    runs-on: ubuntu-latest
    if: |
      always() &&
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v')
    needs:
    - unit-tests
    - integ-tests
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install bumpversion wheel twine
    - name: Set package version
      run: |
        bumpversion --new-version $(git describe --tag --match 'v*' | cut -c 2-) .
    - name: Build package
      run: |
        python setup.py sdist bdist_wheel
    - name: Upload package to pypi.org
      env:
        TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      run: |
        twine upload dist/*
